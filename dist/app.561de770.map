{"version":3,"sources":["src/event-emiter.js","src/handle.js","src/api.js","app.js"],"names":["EventEmitter","events","event","listener","push","removeListener","idx","indexOf","splice","args","forEach","apply","remove","on","roundTime","time","Math","round","sizeTo","size","floor","secToMinutes","getTrackName","url","str","split","length","AudioPlayer","parentElmnt","childs","activeClass","loop","loopAll","emitter","audio","Audio","tracks","currentTrackIndex","i","hasChild","loopAllTacks","preventDefault","setTracks","target","files","emit","obj","name","some","createPlayList","audioLinks","map","URL","createObjectURL","childNodes","child","index","onclick","removeActiveClass","classList","add","playCurrentByIndex","createElemnt","parent","text","element","document","createElement","innerHTML","dataset","track","appendChild","seekbar","progressTime","ontimeupdate","currentTime","duration","seekValue","isNaN","value","addActiveClassByIndex","paused","play","pause","removeActiveClassByIndex","muted","volume","playall","onended","trackIndex","isPlaying","ended","readyState","src","oncanplay","window","onload","btnPlay","getElementById","btnPause","btnStop","btnNext","btnPrev","btnMute","btnPlus","btnMinus","btnLoop","btnLoopAll","inputFile","inputText","btnAdd","ul","onchange","addTracks","setTracksURL","onChildPlay","playTrack","pauseTack","stopTrack","muteTack","prevTack","nextTack","volPlus","volMinus","setProgress","loopTack","playAll"],"mappings":"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","file":"app.561de770.map","sourceRoot":"..","sourcesContent":["export default class EventEmitter {\r\n\r\n  constructor() {    this.events = {};  }\r\n  \r\n  on(event, listener) {\r\n      if (typeof this.events[event] !== 'object') {\r\n          this.events[event] = [];\r\n      }\r\n      this.events[event].push(listener);\r\n      return () => this.removeListener(event, listener);\r\n  }\r\n  removeListener(event, listener) {\r\n    if (typeof this.events[event] === 'object') {\r\n        const idx = this.events[event].indexOf(listener);\r\n        if (idx > -1) {\r\n          this.events[event].splice(idx, 1);\r\n        }\r\n    }\r\n  }\r\n  emit(event, ...args) {\r\n    if (typeof this.events[event] === 'object') {\r\n      this.events[event].forEach(listener => listener.apply(this, args));\r\n    }\r\n  }\r\n  once(event, listener) {\r\n    const remove = this.on(event, (...args) => {\r\n        remove();\r\n        listener.apply(this, args);\r\n    });\r\n  }\r\n};","function roundTime(time) { // fixed 2 after comma\r\n    return Math.round((time / 100) * 100) / 100\r\n}\r\n\r\nfunction sizeTo(size) {\r\n    return size < 1000000 ? \r\n    (Math.floor(size / 1000) + 'KB') : (Math.floor(size / 1000000) + 'MB');\r\n}\r\n\r\nfunction secToMinutes(time) {\r\n    return roundTime((time / 60) * 100);\r\n}\r\n\r\n// get track name from url\r\nfunction getTrackName(url) {\r\n    let str = url.split('/');\r\n    return str[str.length-1];\r\n}\r\n\r\nexport { roundTime , sizeTo , secToMinutes , getTrackName };","/* Create your own playlist from your local computer */\r\n/* API Author : Haikel Fazzani */\r\n/* \r\n    Api tested on : chrome , firefox , opera , edge \r\n    System : windows\r\n    support : mp3 , mp4 , wav\r\n*/\r\nimport EventEmitter from \"./event-emiter\";\r\nimport { roundTime, sizeTo, getTrackName } from \"./handle\";\r\n\r\nexport class AudioPlayer {\r\n\r\n    constructor(parentElmnt, childs = 'li', activeClass = \"active\", loop = false, loopAll = false) {\r\n        this.emitter = new EventEmitter();\r\n        this.audio = new Audio();\r\n        this.tracks = []; // list of tracks\r\n        this.currentTrackIndex = 0;\r\n        this.i = 0; // index of each audio stored in the array : tracks\r\n        this.parentElmnt = parentElmnt; // example ul elements\r\n        this.childs = childs; // example li elements        \r\n        this.hasChild = false; // parent element (ul) has childs (li)\r\n        this.activeClass = activeClass; // active track class (css)\r\n        this.loopAll = loopAll; // loop all tracks ( : boolean)\r\n        this.audio.loop = loop; // loop single track ( : boolean)\r\n\r\n        this.loopAllTacks(); // ( : method)\r\n    }\r\n\r\n    addTracks(event) {\r\n        event.preventDefault();\r\n        this.setTracks([...event.target.files]);\r\n        this.emitter.emit('haschild', this.hasChild = true);\r\n    }\r\n\r\n    setTracksURL(url) {\r\n        let obj = { name: getTrackName(url), url: url };\r\n\r\n        if (!this.tracks.some(({ url }) => url === obj.url)) {\r\n            this.createPlayList(obj);\r\n            this.tracks.push(obj);\r\n        }\r\n        this.emitter.emit('haschild', this.hasChild = true);\r\n    }\r\n\r\n    setTracks(audioLinks) {\r\n        audioLinks.map(audio => {\r\n            if (!this.tracks.some(({ name }) => name === audio.name)) {\r\n                this.createPlayList(audio);\r\n                this.tracks.push(\r\n                    {\r\n                        name: audio.name, size: audio.size, sizeTo: sizeTo(audio.size),\r\n                        url: URL.createObjectURL(audio)\r\n                    }\r\n                );\r\n            }\r\n        });\r\n    }\r\n\r\n    // on child element click , play track\r\n    onChildPlay() {\r\n        this.emitter.on('haschild', (hasChild) => {\r\n            if (hasChild) {\r\n                [...this.parentElmnt.childNodes].map((child, index) => {\r\n                    this.emitter.removeListener('haschild', this.hasChild);\r\n                    child.onclick = () => {\r\n                        this.removeActiveClass();\r\n                        child.classList.add(this.activeClass);\r\n                        this.currentTrackIndex = index;\r\n                        this.playCurrentByIndex(index);\r\n                    }\r\n                });\r\n            }\r\n        })\r\n    }\r\n\r\n    // create li list from tracks after converting links to urls object\r\n    createPlayList(audio) { this.createElemnt(this.parentElmnt, this.childs, audio.name); }\r\n\r\n    // create a child element and appended to the parent element passed in the constructor\r\n    createElemnt(parent = \"ul\", child = \"li\", text = \"\") {\r\n        let element = document.createElement(child);\r\n        element.innerHTML = text;\r\n        element.dataset.track = text;\r\n        parent.appendChild(element);\r\n    }\r\n\r\n    /** emit & get : Progress , duration ---- */\r\n    setProgress(seekbar, progressTime = {}) {\r\n        this.audio.ontimeupdate = () => {\r\n            let currentTime = roundTime(this.audio.currentTime),\r\n                duration = roundTime(this.audio.duration),\r\n                seekValue = Math.floor((100 / this.audio.duration) * this.audio.currentTime);\r\n\r\n            if (!isNaN(seekValue)) {\r\n                seekbar.value = seekValue;\r\n                progressTime.innerHTML = currentTime + '/' + duration;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    getAudioObject() { return this.audio; }\r\n    /* --------------------- Audio Controls -------- */\r\n\r\n    playTrack() {\r\n        if (this.tracks.length > 0) {\r\n            this.removeActiveClass();\r\n            this.addActiveClassByIndex(this.currentTrackIndex);\r\n            this.playCurrentByIndex(this.currentTrackIndex);\r\n        }\r\n    }\r\n\r\n    pauseTack() {\r\n        if (this.audio.paused) this.audio.play()\r\n        else this.audio.pause();\r\n    }\r\n\r\n    stopTrack() {\r\n        this.audio.pause();\r\n        this.audio.currentTime = 0;\r\n    }\r\n\r\n    nextTack() {\r\n        if (this.tracks.length > 0) {\r\n            this.removeActiveClassByIndex(this.currentTrackIndex);\r\n            this.currentTrackIndex++;\r\n\r\n            this.currentTrackIndex = this.currentTrackIndex > this.tracks.length - 1 ?\r\n                0 : this.currentTrackIndex;\r\n\r\n            this.addActiveClassByIndex(this.currentTrackIndex);\r\n            this.playCurrentByIndex(this.currentTrackIndex);\r\n        }\r\n    }\r\n\r\n    prevTack() {\r\n        if (this.tracks.length > 0) {\r\n            this.removeActiveClassByIndex(this.currentTrackIndex);\r\n            this.currentTrackIndex--;\r\n            this.currentTrackIndex = this.currentTrackIndex < 0 ? this.tracks.length - 1 :\r\n                this.currentTrackIndex;\r\n\r\n            this.addActiveClassByIndex(this.currentTrackIndex);\r\n            this.playCurrentByIndex(this.currentTrackIndex);\r\n        }\r\n    }\r\n\r\n    muteTack() { this.audio.muted = this.audio.muted === false ? true : false; }\r\n    volPlus() { return this.audio.volume = this.audio.volume < 1 ? this.audio.volume + 0.1 : 0.9; }\r\n    volMinus() { return this.audio.volume = this.audio.volume > 0.1 ? this.audio.volume - 0.1 : 0.1; }\r\n\r\n    // loop single track\r\n    loopTack() {\r\n        this.loopAll = false;\r\n        this.audio.loop = this.audio.loop ? false : true;\r\n        return this.audio.loop;\r\n    }\r\n\r\n    // loop all tracks list\r\n    playAll() {\r\n        this.audio.loop = false;\r\n        this.loopAll = this.loopAll ? false : true;\r\n        this.emitter.emit('playall', this.loopAll);\r\n        return this.loopAll;\r\n    }\r\n\r\n    // this method listen for the event 'playall' emited by playAll() method\r\n    loopAllTacks() {\r\n        this.emitter.on('playall', (playall) => {\r\n            this.audio.onended = () => {\r\n                if (playall) {\r\n                    this.removeActiveClassByIndex(this.currentTrackIndex);\r\n                    this.currentTrackIndex++;\r\n\r\n                    if (this.currentTrackIndex === this.tracks.length) {\r\n                        this.currentTrackIndex = 0;\r\n                    }\r\n\r\n                    this.addActiveClassByIndex(this.currentTrackIndex);\r\n                    this.playCurrentByIndex(this.currentTrackIndex);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    // play current track by its index passed in parameters\r\n    playCurrentByIndex(trackIndex) {\r\n        let isPlaying = this.audio.currentTime > 0 && !this.audio.paused && !this.audio.ended\r\n            && this.audio.readyState > 2;\r\n\r\n        this.audio.src = this.tracks[trackIndex].url;\r\n        if (!isPlaying) {       \r\n            this.audio.oncanplay = () => this.audio.play();\r\n        }\r\n        return this.tracks[trackIndex].name;\r\n    }\r\n\r\n    /* add & remove a active class to the current child play (css) */\r\n    addActiveClassByIndex(index = 0) {\r\n        this.parentElmnt.childNodes[index].classList.add(this.activeClass);\r\n    }\r\n\r\n    // remove all active classes expect the current track play\r\n    removeActiveClass() {\r\n        [...this.parentElmnt.childNodes].map(child => child.classList.remove(this.activeClass));\r\n    }\r\n\r\n    removeActiveClassByIndex(index = 0) {\r\n        this.parentElmnt.childNodes[index].classList.remove(this.activeClass);\r\n    }\r\n}","import { AudioPlayer } from './src/api';\r\n\r\nwindow.onload = () => {\r\n\r\n    let btnPlay     = document.getElementById('btn-play'),\r\n        btnPause    = document.getElementById('btn-pause'),\r\n        btnStop     = document.getElementById('btn-stop'),\r\n        btnNext     = document.getElementById('btn-next'),\r\n        btnPrev     = document.getElementById('btn-previous'),\r\n        btnMute     = document.getElementById('btn-mute'),\r\n        btnPlus     = document.getElementById('btn-plus'),\r\n        btnMinus    = document.getElementById('btn-minus') ,\r\n        btnLoop     = document.getElementById('btn-loop') ,\r\n        btnLoopAll  = document.getElementById('btn-loop-all') ,\r\n        seekbar     = document.getElementById('seekbar') ,\r\n        progressTime = document.getElementById('progress-time'); \r\n\r\n    let inputFile = document.getElementById('input-file'),\r\n        inputText = document.getElementById('input-text'),\r\n        btnAdd = document.getElementById('btn-add'),\r\n        ul = document.getElementById('audio-list');\r\n\r\n    /**  */\r\n    let audio = new AudioPlayer(ul);\r\n\r\n    inputFile.onchange = (event) => { audio.addTracks(event); };\r\n    btnAdd.onclick = () => {\r\n        audio.setTracksURL(inputText.value)\r\n    }\r\n\r\n    // on click on audio in the list , the audio play the current\r\n    audio.onChildPlay();    \r\n\r\n    /* Audio Controls */\r\n    btnPlay.onclick     = () => audio.playTrack();    \r\n    btnPause.onclick    = () => audio.pauseTack();\r\n    btnStop.onclick     = () => audio.stopTrack();\r\n    btnMute.onclick     = () => audio.muteTack();    \r\n    btnPrev.onclick     = () => audio.prevTack();\r\n    btnNext.onclick     = () => audio.nextTack();\r\n    btnPlus.onclick     = () => audio.volPlus();\r\n    btnMinus.onclick    = () => audio.volMinus();\r\n\r\n    // get the current audio duration\r\n    //audio.getDuration().then(res => console.log(res));\r\n    audio.setProgress(seekbar , progressTime);\r\n\r\n    // audio.getAudioObject().onloadeddata = () => {\r\n    //     console.log(audio.getAudioObject().duration)\r\n    // };\r\n\r\n    // audio.getAudioObject().ontimeupdate = () => {\r\n    //     console.log(audio.getAudioObject().currentTime)\r\n    // };\r\n\r\n    btnLoop.onclick = () => audio.loopTack();\r\n    btnLoopAll.onclick = () => audio.playAll();\r\n\r\n}"]}